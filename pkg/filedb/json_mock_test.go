// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/filedb/json.go

// Package filedb is a generated GoMock package.
package filedb

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MocktableNameValidator is a mock of tableNameValidator interface
type MocktableNameValidator struct {
	ctrl     *gomock.Controller
	recorder *MocktableNameValidatorMockRecorder
}

// MocktableNameValidatorMockRecorder is the mock recorder for MocktableNameValidator
type MocktableNameValidatorMockRecorder struct {
	mock *MocktableNameValidator
}

// NewMocktableNameValidator creates a new mock instance
func NewMocktableNameValidator(ctrl *gomock.Controller) *MocktableNameValidator {
	mock := &MocktableNameValidator{ctrl: ctrl}
	mock.recorder = &MocktableNameValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MocktableNameValidator) EXPECT() *MocktableNameValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MocktableNameValidator) Validate(tableName string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", tableName)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MocktableNameValidatorMockRecorder) Validate(tableName interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MocktableNameValidator)(nil).Validate), tableName)
}

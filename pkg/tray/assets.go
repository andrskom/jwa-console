// Code generated by go-bindata.
// sources:
// assets/grey.png
// assets/red.png
// assets/yellow.png
// DO NOT EDIT!

package tray

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsGreyPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x70\x08\x8f\xf7\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\x00\x00\x01\x61\x69\x43\x43\x50\x6b\x43\x47\x43\x6f\x6c\x6f\x72\x53\x70\x61\x63\x65\x44\x69\x73\x70\x6c\x61\x79\x50\x33\x00\x00\x28\x91\x63\x60\x60\x52\x49\x2c\x28\xc8\x61\x61\x60\x60\xc8\xcd\x2b\x29\x0a\x72\x77\x52\x88\x88\x8c\x52\x60\x7f\xc8\xc0\x0e\x84\xbc\x0c\x62\x0c\x0a\x89\xc9\xc5\x05\x8e\x01\x01\x3e\x40\x25\x0c\x30\x1a\x15\x7c\xbb\xc6\xc0\x08\xa2\x2f\xeb\x82\xcc\x3a\x25\x35\xb5\x49\xb5\x5e\xc0\xd7\x62\xa6\xf0\xd5\x8b\xaf\x44\x9b\x30\xd5\xa3\x00\xae\x94\xd4\xe2\x64\x20\xfd\x07\x88\x53\x93\x0b\x8a\x4a\x18\x18\x18\x53\x80\x6c\xe5\xf2\x92\x02\x10\xbb\x03\xc8\x16\x29\x02\x3a\x0a\xc8\x9e\x03\x62\xa7\x43\xd8\x1b\x40\xec\x24\x08\xfb\x08\x58\x4d\x48\x90\x33\x90\x7d\x03\xc8\x56\x48\xce\x48\x04\x9a\xc1\xf8\x03\xc8\xd6\x49\x42\x12\x4f\x47\x62\x43\xed\x05\x01\x6e\x97\xcc\xe2\x82\x9c\xc4\x4a\x85\x00\x63\x02\xae\x25\x03\x94\xa4\x56\x94\x80\x68\xe7\xfc\x82\xca\xa2\xcc\xf4\x8c\x12\x05\x47\x60\x28\xa5\x2a\x78\xe6\x25\xeb\xe9\x28\x18\x19\x18\x9a\x33\x30\x80\xc2\x1c\xa2\xfa\x73\x20\x38\x2c\x19\xc5\xce\x20\xc4\x9a\xef\x33\x30\xd8\xee\xff\xff\xff\xff\x6e\x84\x98\xd7\x7e\x06\x86\x8d\x40\x9d\x5c\x3b\x11\x62\x1a\x16\x0c\x0c\x82\xdc\x0c\x0c\x27\x76\x16\x24\x16\x25\x82\x85\x98\x81\x98\x29\x2d\x8d\x81\xe1\xd3\x72\x06\x06\xde\x48\x06\x06\xe1\x0b\x40\x3d\xd1\xc5\x69\xc6\x46\x60\x79\x46\x1e\x27\x06\x06\xd6\x7b\xff\xff\x7f\x56\x63\x60\x60\x9f\xcc\xc0\xf0\x77\xc2\xff\xff\xbf\x17\xfd\xff\xff\x77\x31\x50\xf3\x1d\x06\x86\x03\x79\x00\x15\x21\x65\xee\x35\xc7\xd1\xfb\x00\x00\x06\xca\x49\x44\x41\x54\x78\x01\xed\x5b\x5d\x6c\x54\x45\x14\x9e\x33\x77\x0b\xa5\x14\x69\x45\x40\xd1\x68\x02\x41\x1f\x30\xd1\x87\x22\x08\x06\xb2\x6c\x97\x62\xb1\x6c\xb7\xdb\x2e\x8a\x89\x89\x10\x1e\x45\x22\x89\x04\xfc\x8b\x0f\x98\x40\x40\x7e\xa2\x62\x8c\xd1\x18\x35\xea\x2e\x2d\xdb\x2a\x11\xfa\xab\x48\x50\x92\xa2\x12\x12\x8d\x51\x34\x10\xb4\x02\x46\x10\x2d\x4a\xd9\xbd\xe3\x37\x95\x85\x5b\xe8\xde\x9d\x7b\xef\xdc\xa5\x26\x9d\x97\x3b\x77\xee\x39\xe7\x3b\xe7\x9b\xff\xd9\x59\x62\x05\x48\x42\x08\x6a\xfa\xb0\x7d\x46\x3a\xc3\x16\x02\xee\x4e\x62\xec\x76\x26\xc4\x78\xc1\x68\x0c\x91\x30\xf1\xec\x41\x59\x0f\xca\x7a\x04\xf1\x63\x06\x89\x36\x73\xea\xa4\xae\xf8\xb4\x69\x7d\x7e\xbb\x07\x5c\xff\x52\x72\x67\x6b\x08\xc1\xc5\x04\x63\x11\x04\x37\xc9\x09\x12\x11\xfd\x09\x9d\xdd\x8c\x53\x6a\xf2\x2d\xe5\xc9\x8a\x8a\x8a\x0b\x4e\xf4\x55\x65\x7d\x21\x20\x99\xea\x98\x65\x9a\xe6\x26\xc6\xc4\x4c\x55\x47\xec\xe4\x88\xd8\x0f\x8c\xf8\xd3\x0d\x91\x50\x02\xc4\x80\x4f\x7d\x49\x2b\x01\x8d\x1f\xb5\x4f\xce\xf4\x99\xeb\xe1\x61\xbd\x3e\x17\x2f\x5b\x02\x11\x07\x99\x60\xab\xe2\x75\xf3\x3f\xbd\x5c\xea\x2d\xa7\x8d\x80\x1d\xa9\xd6\x6a\x53\xd0\xfb\xe8\xef\x63\xbc\xb9\x94\x57\xdb\x44\xb7\x58\xbd\xb8\x36\xbc\x31\xaf\xa4\x82\x80\x16\x02\x92\x3b\xdb\x1e\x43\xe0\x9b\x51\xf3\x86\x02\xa6\x16\x11\x4e\xec\x9d\x1b\xca\x8a\x96\x07\x83\xc1\x7f\xbc\x18\xf4\x4c\x40\xb2\xa9\x75\xab\xc9\xd8\x0a\x2f\x4e\xb8\xd5\x45\x97\x38\x30\xb6\x64\x62\xa8\xaa\xea\xae\x5e\xb7\x36\xb8\x5b\x45\xa9\x87\x51\x7e\xd5\xb5\x0a\x5e\xe2\x0b\xc1\x66\xfc\x71\xee\xe4\xbb\x72\x9a\x95\xef\x6e\x92\x6b\x02\xfa\xa7\x38\xc1\xd6\x3b\x01\xc5\x08\xfe\x1d\x23\xb6\x81\x93\x51\x45\x9c\x4f\x1b\x41\x45\xe5\x54\x52\x3a\x8e\x73\x7a\xd5\x89\x1d\xab\x2c\x82\x8f\x24\x9b\xdb\x5f\xb0\x96\x39\xc9\xbb\x62\xae\x71\x57\xc7\x6d\x18\xed\x0f\x02\x7c\x9c\x12\x18\x51\xbb\xc1\xc5\x9a\xfa\xc8\xfc\xee\xc1\xe4\x13\x42\x18\x22\xd5\x76\x0a\x23\x7c\xf9\x60\xdf\x95\xca\x88\x2d\x59\x1c\x9d\xff\x9e\x92\xac\x45\xc8\x55\x0b\xc8\x9c\x37\xb7\xa9\x04\x0f\x76\x4f\x92\xc1\xef\x5f\x1c\x0d\x87\x73\x05\x6f\xf1\xc5\x53\x16\xab\x83\x2d\x89\xae\xae\x52\xa7\x46\x1c\x13\xd0\xd8\xd2\x36\x53\x30\xb1\x28\x1f\x10\x06\xa8\xaf\x59\x11\x4d\x8f\x47\x2a\x77\xdb\xc9\x26\x76\xef\xbf\x9e\x9a\xdb\x5f\xf2\x54\xfb\x00\xc0\x0c\x34\x81\xce\x5c\x78\xd2\x0e\x6b\xb0\x6f\x8e\xbb\xc0\x07\x4d\x6d\x9d\x80\x0b\x0e\x66\xcc\x52\x76\x88\xca\x8b\xee\x8b\x07\x83\x7f\x59\xca\x30\x68\x09\xda\x91\xea\x5c\xc0\xc8\x8c\x62\x00\x9b\x8d\x6f\x93\x50\x56\x66\x95\xf1\x94\x27\xd6\x1b\x18\x55\x3c\x35\xb6\x60\x4e\x8f\xaa\x1d\x47\x04\x24\x5a\x3a\xe6\x89\x74\xa6\xc3\xce\xb8\x6c\xf6\xfd\x35\x5f\x13\x3e\x66\x95\x4b\x34\xb5\xce\xc5\x00\xb8\x05\x81\xdf\x6d\x2d\xd7\x9d\x27\xe2\x5b\xe3\xd1\xca\x95\xaa\x76\x1d\x75\x01\x91\x16\x0f\xe5\x35\x6c\xd0\xd2\xf8\x55\xc1\xb7\x3f\x01\xbd\x0e\xbf\x83\xef\xf7\x4d\x88\x7a\xd9\xd2\xf2\xfa\x79\x51\x40\x99\x00\x69\x94\x98\x78\xc0\xde\x30\x75\xc5\x23\xe1\x5d\x56\x99\xc4\xce\xd6\xc7\x05\x33\x37\x15\x6a\x95\x88\xf1\xe9\xe6\x64\xaa\x73\xba\xd5\x07\xbb\xbc\x32\x01\xd2\x28\x8c\xdf\x68\x67\x2c\x10\x60\x6b\xad\xdf\x1b\x9b\x3b\x67\x63\x74\xc2\xae\xb0\xb0\x49\xb0\x4c\xad\x2a\xa2\x32\x01\x8c\x84\x3c\xcc\xc8\x99\xd0\x3c\x7e\x8a\x2d\x0a\x7f\x61\x15\xc8\x98\xe9\x17\x0b\x55\xf3\x56\x5c\x12\x64\xeb\xab\x55\x56\x9d\x00\x21\xee\xb0\x2a\x5e\x99\x07\x68\xca\x5a\xd6\xd8\xdc\x31\x07\x7d\xfe\x1e\x6b\x59\x01\xf3\x93\x55\xb1\x94\x09\xc0\x18\x70\x93\x9d\x51\x2c\x73\xf7\x5a\xbf\xa7\x4d\x33\x6a\x7d\x2f\x64\x1e\x5d\xb5\xb4\xb9\x79\x9f\xd2\xb6\x5c\x99\x00\x62\x64\x4f\x80\xc1\x7e\xb6\x06\x89\x61\xb8\xc2\xfa\x5e\xe8\xfc\x79\xd6\xa7\x74\x04\xa7\x4c\x00\x02\xb0\x25\x20\x43\xf4\xcb\x80\x20\x05\x53\x72\x60\x80\x8e\xc6\x17\x83\x99\x4a\xf8\xca\x04\x08\x74\x72\x3b\xff\xb8\xa0\xb2\xec\xf7\x3d\x7b\x0e\x8d\xc6\xa2\xe7\xd6\xec\xfb\xb5\x78\xa2\x42\x6c\xfd\xcd\xfa\x14\xc8\x66\xf2\x3f\xe9\x57\x2c\x81\xa7\xe4\x92\x33\x33\x99\x97\x71\x26\xb8\x34\x90\x61\xbd\x67\x7a\x4f\x6c\x81\x9c\x03\xdb\xb9\xac\xba\x2f\xe7\x8c\x4e\xa8\x68\xab\x3b\x29\x04\x08\x60\x39\x09\xc0\x20\x39\x37\xdd\x27\x8e\xa4\x55\x50\x0b\x20\xc3\xd3\xa6\xf4\x37\x6f\x52\xee\x02\x8c\x64\x0b\xf8\xbf\x24\xba\x10\x8d\x86\x7e\x57\xf1\x56\x99\x00\x08\x1e\x56\x31\x38\x44\x64\x0e\xab\xfe\x7e\xa0\x4c\x80\x60\xfc\xe3\x21\x12\x5c\x5e\x37\xd0\xff\x6d\xcf\x20\xac\x06\x94\x09\x68\xa8\x9d\xd7\x8d\x6e\xf0\x9b\x55\x79\xa8\xe6\xb1\x10\x52\xae\x2c\x65\x02\xd0\xa4\x4c\xce\xf0\x5b\xdd\x50\x4f\xc4\x4e\xb3\x68\xe5\xe7\xaa\x6e\x2a\x13\x20\x0d\x0a\xc1\x5f\x51\x35\x7c\xad\xe4\xb8\xe0\xaf\xc5\x89\x32\xaa\xf8\x8e\x08\x88\xd7\x81\x59\x9c\xf0\xaa\x1a\x2f\xb8\x1c\x8e\xc4\x44\xf1\x08\x47\xdb\x6f\x47\x04\xc8\x80\x70\xfa\xfa\x7c\xc1\x03\x53\x04\xc4\x6a\x74\x7b\xbc\x7a\xce\x29\x45\xf1\x7e\x31\xc7\x04\xc4\xeb\xc2\xfb\xb0\x31\x6a\x71\x02\x52\x08\x59\xac\x7b\x4f\x89\xe2\x91\x1b\x9c\x62\x39\x26\x40\x02\x8c\x2a\x0a\x2c\x03\x09\x03\x76\x7f\x4e\x81\x75\xca\xf7\xcf\xf9\x06\x7f\xc4\x69\xed\x4b\x1f\x5c\x11\x50\x53\x13\xc4\x74\x28\x1e\x06\xeb\xca\x83\x8d\xce\x80\xaf\xb2\x45\x6c\x63\xbe\xdf\x1f\xae\xd2\xb9\x58\xe0\x8a\x00\xa9\xfb\xdf\x25\x05\x7a\x2e\x97\xe1\x42\x95\x63\xcf\xb7\x1f\x57\x68\x9e\x72\x8b\xe7\x9a\x00\x09\x88\xf1\x60\x1d\x5a\xc1\x0e\xb7\xe0\x5e\xf5\x64\x37\x0c\x94\x8c\x8e\x7a\xb9\x3f\xe4\x89\x00\x19\x40\x69\xf1\x75\xcb\x30\x35\x1e\xf1\x1a\x8c\x0b\x7d\xfc\x32\xcf\x1e\xac\xab\x9a\x7d\xd2\x85\xee\x25\x15\xcf\x04\x54\x57\xcf\x3c\x1b\xe0\x7c\xa9\xea\xe6\xe3\x12\xb2\xd7\x0c\xf1\xcd\x72\x46\xf2\x6a\xc6\x33\x01\xd2\x81\x58\x24\xb4\x17\xc7\xdf\xdb\xbd\x3a\xa3\xaa\x8f\xa6\xff\x3d\x4d\x2c\x79\x46\x55\xde\x4e\x4e\x0b\x01\x12\x80\xca\x02\xab\x31\x1e\x1c\xb7\x03\xd3\xf7\x4d\x2c\x8f\xcf\x9a\xf5\xb7\x0e\x7b\xda\x08\x90\xbf\x04\xe3\x52\xa4\xef\xb3\x82\x5c\x84\xe9\xbc\x26\xa7\x8d\x00\x59\x1b\x14\xad\x7c\x0b\x63\xc1\x37\x3a\x6a\x66\x30\x1b\xfd\xeb\x0e\x4e\x6b\x06\xfb\xe6\xb6\x4c\x2b\x01\x72\x17\x86\xc3\x08\xd7\x73\x72\xde\x20\x88\xbd\x1d\xaf\xad\xd4\x4a\xb0\x56\x02\x64\x00\xb1\xda\x50\x0b\x9a\xe9\xd1\xbc\xc1\xb8\x10\xc0\x65\xaa\x6d\x2e\xd4\x6c\x55\xb4\x13\x80\x2e\x80\xf9\x59\xbc\x61\x8b\xea\xea\x23\x7d\x59\x1f\x09\x7f\xe5\x4a\xd5\x46\x49\x3b\x01\x12\x6b\x04\x1f\xf9\x26\x1e\x72\xa1\xa2\x2d\x61\xc9\xfb\xba\x36\x63\xc3\x86\x86\x19\x18\x66\x60\x98\x81\x8b\x0c\x60\x6d\xe1\x4f\xc2\xb5\xb8\x13\xd8\x1f\x4c\xd0\x65\x3d\x10\xa0\x7b\xaf\xbc\x82\xa3\xc3\xb6\x2f\xb3\x80\x0e\xc7\x0a\x65\x63\x98\x00\xbf\x98\xc6\xad\x42\xf4\x80\xa1\x9f\x7c\x6b\x01\x08\x5f\x2b\x01\x99\x0c\xd7\xba\xb0\xca\x56\x8d\x6f\x04\x20\xfa\x81\x77\x86\xb2\x88\x2e\x9f\xc6\x48\xae\xd5\x5e\xd6\x0d\xdf\x08\xe0\x44\xda\x0e\x4b\xb1\x0c\x3e\x10\xab\x0e\xfa\x72\xd8\xe2\x1b\x01\xc5\x81\xb2\xad\x9a\x0e\x4b\x4d\xc3\xa0\x95\xd9\x1a\xd3\xfd\xf4\x8d\x80\x9a\x9a\x8a\x73\x68\x05\x8f\xc2\x61\x4f\x7d\x97\x38\x6d\xf2\x63\xfe\xcf\x12\xe9\x1b\x01\x12\xa0\xa1\xb6\xf2\x33\xb4\x02\xf7\x7b\x78\xa2\x6f\xc7\x8f\x0d\x3c\x9b\x75\xd6\x8f\xa7\xaf\x04\x48\x87\x69\xe2\xe8\xb5\x20\x61\x8f\x63\xe7\x71\xf1\xd2\x30\x8c\x06\xaf\x7f\x8c\xcc\x87\xeb\xdb\x52\xd8\x0a\xdc\xdd\xdd\x5d\xf4\xe3\xf1\xd3\xeb\xd0\x19\x96\xe0\x02\xa5\xfc\x9b\x4c\x6e\x5c\x62\x67\x71\x27\xf3\x13\x8c\xfa\x2b\x62\x0b\x43\x47\xad\x76\xfc\xc8\xff\x0b\xd1\xd4\xdc\x5e\x13\xcd\xac\x1d\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x5f\x61\x9e\xbc\x70\x08\x00\x00")

func assetsGreyPngBytes() ([]byte, error) {
	return bindataRead(
		_assetsGreyPng,
		"assets/grey.png",
	)
}

func assetsGreyPng() (*asset, error) {
	bytes, err := assetsGreyPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/grey.png", size: 2160, mode: os.FileMode(420), modTime: time.Unix(1560343599, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsRedPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\x7d\x08\x82\xf7\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\x00\x00\x01\x61\x69\x43\x43\x50\x6b\x43\x47\x43\x6f\x6c\x6f\x72\x53\x70\x61\x63\x65\x44\x69\x73\x70\x6c\x61\x79\x50\x33\x00\x00\x28\x91\x63\x60\x60\x52\x49\x2c\x28\xc8\x61\x61\x60\x60\xc8\xcd\x2b\x29\x0a\x72\x77\x52\x88\x88\x8c\x52\x60\x7f\xc8\xc0\x0e\x84\xbc\x0c\x62\x0c\x0a\x89\xc9\xc5\x05\x8e\x01\x01\x3e\x40\x25\x0c\x30\x1a\x15\x7c\xbb\xc6\xc0\x08\xa2\x2f\xeb\x82\xcc\x3a\x25\x35\xb5\x49\xb5\x5e\xc0\xd7\x62\xa6\xf0\xd5\x8b\xaf\x44\x9b\x30\xd5\xa3\x00\xae\x94\xd4\xe2\x64\x20\xfd\x07\x88\x53\x93\x0b\x8a\x4a\x18\x18\x18\x53\x80\x6c\xe5\xf2\x92\x02\x10\xbb\x03\xc8\x16\x29\x02\x3a\x0a\xc8\x9e\x03\x62\xa7\x43\xd8\x1b\x40\xec\x24\x08\xfb\x08\x58\x4d\x48\x90\x33\x90\x7d\x03\xc8\x56\x48\xce\x48\x04\x9a\xc1\xf8\x03\xc8\xd6\x49\x42\x12\x4f\x47\x62\x43\xed\x05\x01\x6e\x97\xcc\xe2\x82\x9c\xc4\x4a\x85\x00\x63\x02\xae\x25\x03\x94\xa4\x56\x94\x80\x68\xe7\xfc\x82\xca\xa2\xcc\xf4\x8c\x12\x05\x47\x60\x28\xa5\x2a\x78\xe6\x25\xeb\xe9\x28\x18\x19\x18\x9a\x33\x30\x80\xc2\x1c\xa2\xfa\x73\x20\x38\x2c\x19\xc5\xce\x20\xc4\x9a\xef\x33\x30\xd8\xee\xff\xff\xff\xff\x6e\x84\x98\xd7\x7e\x06\x86\x8d\x40\x9d\x5c\x3b\x11\x62\x1a\x16\x0c\x0c\x82\xdc\x0c\x0c\x27\x76\x16\x24\x16\x25\x82\x85\x98\x81\x98\x29\x2d\x8d\x81\xe1\xd3\x72\x06\x06\xde\x48\x06\x06\xe1\x0b\x40\x3d\xd1\xc5\x69\xc6\x46\x60\x79\x46\x1e\x27\x06\x06\xd6\x7b\xff\xff\x7f\x56\x63\x60\x60\x9f\xcc\xc0\xf0\x77\xc2\xff\xff\xbf\x17\xfd\xff\xff\x77\x31\x50\xf3\x1d\x06\x86\x03\x79\x00\x15\x21\x65\xee\x35\xc7\xd1\xfb\x00\x00\x06\xd7\x49\x44\x41\x54\x78\x01\xed\x5b\x7d\x6c\x14\x45\x14\x9f\x37\x7b\x47\x4b\x7b\xed\x15\x2a\x05\x0a\xed\x5d\x31\xf4\xa8\x20\x1a\x15\x41\x30\x12\x25\x46\x14\x15\x8d\x34\x51\x4c\x4c\x84\xf0\xa7\x1f\x81\x44\x82\x1f\x08\xff\x98\x80\x54\x3e\xa2\x62\x0c\x89\x31\x6a\x34\xd6\x3f\x08\x89\x11\x22\x88\xa2\x11\x49\xa8\x1f\x25\xa5\x14\x25\xbd\x2b\x50\xa0\x25\x45\xaf\xd7\x42\x5b\x6e\x9f\x6f\x0a\x4b\xb6\x70\xb7\x37\xbb\x3b\xbb\xe5\x8f\x4e\x72\x99\xd9\x99\x37\xbf\xf7\xde\x6f\xbe\x67\xf7\x80\xf9\x10\x10\x11\xe2\xe1\xdb\x66\x03\xd3\x17\x31\x64\x33\x18\xc3\x6a\x64\x6c\x1c\x20\x2b\x62\x0c\x74\x06\x78\x86\xe2\x33\x54\x76\x86\xd2\x6d\x1c\xf8\xf7\x15\x15\xda\x7e\x68\x6a\xea\xf7\xda\x3c\xf0\x52\x41\x22\x5c\xbd\x80\x7c\x7f\x86\xe9\x6c\x31\x32\x2c\xb7\xa5\x0b\xa0\x9b\x08\xda\xcd\x38\xec\x8c\x4c\x2d\xac\x87\x86\x86\x01\x5b\xf5\x25\x85\x3d\x21\x20\x5e\x34\x6d\x2e\x63\x7a\x1d\x22\x9b\x23\x69\x87\xa5\x18\x00\xfb\x87\x73\xf6\x66\xc5\xbf\x2d\x5f\x03\x10\x2d\x0a\x83\x52\x02\x12\xe1\xdb\xa7\xa0\xde\xbf\x81\xba\xfc\x12\x85\x36\x5e\x83\x22\xe7\x1b\x34\x84\x55\x15\xa9\x63\x3f\x5d\xcb\x74\x99\x50\x46\x40\xbc\xb8\xe6\x31\x44\xfd\x2b\x86\x48\xe3\xda\xbb\x40\x06\xd3\x9c\xc1\x57\x47\xbb\x8f\x6d\x52\xa1\x45\x09\x01\x89\xe2\x69\x2f\xa1\xae\x6f\xa6\xbe\xa9\xa9\x30\x4a\x06\x83\x7a\xc3\xe7\x58\x3a\x71\x45\x55\xfc\xc7\x4b\x32\xf2\xd9\x64\x5c\x13\xd0\x1a\x8a\x6d\xa5\x59\xfd\xe5\x6c\x0a\x3c\xcd\x07\x76\x68\x74\x41\xfe\x82\x09\xe7\x1a\x7b\x9c\xea\xe1\x4e\x2b\x8a\x7a\x34\xd9\xad\x1a\x36\xe7\x85\x01\xc8\x66\x5f\xec\xed\xfb\x42\x2c\xb3\xe2\xd1\x49\x70\x4c\x80\x58\xe2\x18\xea\x1b\x6c\x29\x05\x68\x61\x00\x1b\x35\x8d\x3f\xc2\x59\x70\x3a\x0b\x14\x8c\x09\xf0\x60\x29\xe7\xf0\x91\x2d\x1c\xb3\x30\xe2\xe2\xb6\xe2\x9a\x77\xcc\x59\x76\xd2\x8e\x98\x6b\x2f\xa9\x89\xf4\xa7\xf5\x06\x62\xbe\x54\x46\x19\x29\xd9\xcb\x35\x58\x53\xf9\x5f\xcb\xe1\x4c\xf2\x58\x5b\xab\x25\x76\x37\x76\x12\xde\x98\x4c\xe5\x52\x79\x9c\x2f\xad\x4a\x1e\xfb\x52\x4a\xd6\x24\xe4\xa8\x07\xf4\xa5\xf5\x6d\x92\xce\x77\xd0\x46\xe6\xd1\x68\xea\xf8\xc3\xd9\x9c\x37\xd9\xe2\x2e\xa9\xeb\x5b\x3a\xc6\x4d\x0f\xd9\x05\xb1\x4d\x40\x6b\x71\xcd\x1c\x5a\xea\x9e\xcc\xa5\x88\x5a\xfd\xcf\xbc\x60\x70\x56\x55\xb2\x65\xb7\x95\xec\xc9\xe2\xe9\x63\xdb\xf6\x34\xbe\xef\xaa\xf5\xaf\x28\x28\xeb\xed\xbb\xfc\x9a\x95\xae\x4c\x65\xb6\x87\x40\x3c\x14\xfb\x81\xb6\xb5\x0f\x66\x02\x33\xe5\xfd\x55\x38\x3a\x78\x7f\x59\x67\x53\xca\x94\x47\xbc\x21\x24\xc2\xb1\x85\x34\x79\x3d\x4d\xf9\xf3\xe8\x57\x4e\xbb\xc5\x12\xb3\x8c\x9b\x34\x2d\x8d\x3d\x2c\x8f\x4f\x8d\x9e\x6f\xa6\xb3\x85\x5c\xb0\x45\x40\x3c\x1c\x7b\x08\xd3\xb8\x2f\x07\x74\x87\x68\xf9\xf2\x0b\x4d\x6d\x66\xb9\x93\xa1\x69\xf3\xd3\x4c\xdf\x42\x7b\x85\x3b\xcd\xf9\xea\xd3\xb0\xb5\x2a\xd5\xf2\xaa\x2c\xae\xbd\x21\xa0\xb3\xe7\x72\x01\x03\xd7\x96\x5d\xef\x7c\xbc\xa8\x7a\x25\x39\xbf\xcf\x7b\xe7\xe9\x4c\xc9\x70\x89\xe8\x69\xb9\xec\x34\xca\xa5\x09\x18\x04\x45\xf6\xb8\x51\x31\x53\x0c\x0c\xf6\x47\x93\xcd\xdf\x9a\xcb\x12\xc5\xb1\x57\xa8\x9b\xd7\xf9\xb5\x4b\x24\x3d\x93\x4e\x85\x67\xcc\x32\xdb\x60\x95\x96\x26\x40\x80\xd2\xd8\x9f\x60\x05\x86\x9c\xbf\x6e\x2e\x4f\x14\xc5\xe6\xa1\x8e\x75\xe6\x3c\x3f\xd2\x3a\x0e\x3c\x25\xab\x47\x9a\x80\xcb\x2c\xbd\xc8\x0a\x94\x26\xa0\xd6\xaa\x64\xf3\x6f\x66\x19\x9d\xe1\x7b\x7e\xb5\xfc\x10\xbd\x08\x96\xb6\x9a\x65\xa5\x09\x60\x3a\xc6\xcc\x15\x6f\x4c\xc3\x4e\x73\x5e\x5b\xa8\xe6\x01\x9a\xed\xef\x35\xe7\xf9\x95\xa6\xfb\x83\x29\xb2\xba\xe4\x09\x00\x9c\x68\x05\x8a\x4c\x3f\x60\x2e\xa7\x67\xb1\xd4\x0d\x4b\xa0\xf9\x2a\xd4\x79\x4b\x4c\xea\x58\x2e\x4f\x00\x03\x4b\x02\x34\x60\xa7\xcd\xde\xd2\x3c\x7c\x8f\xf9\xd9\xef\x74\x7f\x1f\x93\xba\x82\x93\x26\x80\xd6\x15\x4b\x02\x20\x38\xba\x7d\xa8\x93\x36\xef\x00\x87\x56\x76\xfd\x34\xa0\x29\x26\x80\x2c\xb2\x5c\x5b\x69\xe6\x2d\x31\xac\x3e\x3b\x7e\x66\x21\x43\xa8\x34\x9e\x87\x25\x46\x6b\x7b\x0d\x9b\xa4\x7b\x00\x1d\xbe\xcf\x1a\x95\x32\xc5\xfa\x40\xfa\x03\x71\x27\x78\xae\x6c\xc6\xf8\x4b\x3d\x97\x76\xd0\x92\x19\xc8\x24\xe7\x57\x1e\x68\xda\x39\x19\x5d\x36\x8c\x04\x22\x00\x6f\xcd\x0a\x8a\x38\x5f\x4f\xf7\x9d\xe8\xed\xcd\x2a\xe1\x6b\x81\x36\xa0\x5b\x36\x98\x61\x8c\x8d\x1e\xc0\xa4\x00\x0d\xe0\xe1\x8d\x61\x60\x52\xb2\xb9\x4b\xc6\x06\x69\x02\x00\xf1\x88\x0c\xe0\xcd\x20\x43\x93\xd5\x11\xda\x98\xd1\x1e\x2c\x77\x90\x26\x80\xf3\xe0\x77\xb9\xe1\x6e\x12\x09\x40\xcb\x3b\x08\xb3\x95\xd2\x04\x4c\x5e\x59\x7b\x98\x58\x3d\x6f\xae\x7c\xb3\xa6\xa9\x07\x48\x37\x96\x34\x01\xb0\x6e\x9d\x4e\x0e\x4b\x33\x3b\x5c\xe4\x50\x23\x5d\xa8\x5c\x78\xc7\x41\x59\xfd\xd2\x04\x5c\x01\x84\x0f\x65\x81\x87\x4b\x8e\x06\xfe\xc7\x50\x5f\x9f\x96\xd5\x6f\x8b\x00\x7a\x1d\x75\x90\xba\xd7\x5e\x59\x70\xbf\xe5\xa8\xf5\x7b\xf2\xb1\xc0\xd6\xf1\xdb\x16\x01\xc2\x21\x3a\x69\xad\xf7\xdb\x31\x1b\xfa\xb6\x4f\x4c\xfd\xd1\x69\x43\x9e\xd9\x26\x20\xd2\x7d\xfc\x17\x62\x61\x97\x1d\x25\xbe\xc8\x02\xeb\xcc\xc3\x82\x8d\x76\x75\xd9\x26\x40\x28\xc8\x63\xb8\x9c\x86\xc2\x90\xd3\x9f\x5d\xc5\x2a\xe5\xc9\x16\xda\xf9\xc3\x0b\x76\x5b\x5f\xd8\xe0\x88\x80\xf2\xee\xe3\xe7\x35\xc6\x9f\x27\xc5\xd2\x93\x8d\x4a\x87\x6f\xc0\x02\xd8\x94\xeb\xfd\xc3\x0d\x75\xae\x66\x38\x22\x40\xd4\xbd\xf2\x91\x02\xbc\x9d\x0d\xd8\xaf\x7c\x9a\xf8\x7e\x8d\x54\x87\xde\x70\xaa\x8f\x1a\xd1\x5d\x88\x17\xc5\xea\xe9\x06\xc6\x93\x2f\x42\x72\x59\x26\x86\x61\x7e\x61\xfe\x5d\xf4\x7a\xbc\x23\x97\x6c\xb6\x72\xc7\x3d\xc0\x00\x2c\x0a\x96\x2c\xa7\x95\xe1\x84\xf1\xec\x57\x4c\xce\xeb\xa4\xf7\x59\x37\xce\x0b\x5b\x5d\x13\x50\xda\x75\x28\xc9\x51\x5b\x46\x06\x49\x1d\x3e\x94\x11\x04\x6c\xf3\xe0\x8a\xe4\x12\xd0\x35\x01\x42\x7f\x65\xaa\xf9\x00\xbd\x05\xde\xee\xd2\x16\xf9\xea\x00\x7f\x6b\xe1\xd2\xb7\xe4\x2b\x64\x97\x54\x42\x80\x80\x2f\xc8\x0b\xac\xa6\x5e\x70\x2a\xbb\x2a\x75\x25\x01\x84\x15\x15\xa7\x0e\x5e\x54\x81\xa8\x8c\x80\xc1\x37\xc1\xe0\xc3\xaa\x40\x9b\x30\x95\x9f\xc9\x29\x23\x40\xb4\x46\x64\xe1\xcc\x4f\x69\x62\x3a\xaa\xa2\x65\x32\x61\x50\x0f\x4b\x73\x0c\xac\xc9\x54\xe6\x34\x4f\x29\x01\xe2\x14\x46\x33\xa1\xe3\x35\x39\x97\x13\x44\xee\x67\x91\x54\x93\x52\x82\x95\x12\x20\x1c\x88\xae\x5a\xba\x8b\xb6\xa5\x89\x5c\xce\x38\x29\x47\x2d\xb0\xcd\x49\x3d\xab\x3a\xd4\xab\xd4\x87\x44\xa8\x7a\x2d\xdd\x9e\xac\x57\x89\x4c\xaf\xde\x7f\x8f\xa6\x5a\xee\x56\x89\x29\xb0\x94\xf7\x00\x01\x1a\x18\x35\xea\x13\x62\x56\xdc\x20\x29\x0b\x34\xb4\x76\x28\x03\x1b\x01\x1a\x61\x60\x84\x81\x11\x06\xae\x32\xe0\xc9\x2a\x20\xb0\x5b\x43\xd5\xe2\xe5\x64\xd9\x55\x3d\xee\x23\xae\xdd\x77\xfd\x27\x38\xee\x41\x3d\x5a\x05\x54\x18\xe6\x17\x86\x27\xcb\xa0\x5f\xc6\xab\xd0\xe3\x25\x01\xfe\xde\x0f\x38\x64\xc3\x33\x02\x68\xe7\xa6\x94\x80\x00\xe3\x4a\x37\x56\x06\x5f\x9e\x11\x40\x0a\xae\xfb\x66\xc8\x50\xe9\x2c\x86\x80\xa6\x14\xcf\xb0\xc2\x33\x02\x10\xe0\x1b\x43\x89\xeb\x98\xfe\x1b\x34\xb9\xab\xd1\x93\xcb\x16\xcf\x08\xc8\x2b\x2a\xdc\xaa\xe2\xb2\x74\xf0\x4c\x01\x9a\xf4\xd7\xdf\x76\xc9\xf6\x8c\x80\xf2\xf6\x86\x5e\xce\x02\x2f\xba\x3e\x14\x01\xd4\x79\xb1\xfe\x1b\x44\x79\x46\x80\x50\x50\xd9\x7d\xf4\x67\x9a\x0c\x1d\x9f\xe1\xa9\x07\x35\xd3\x7f\x03\xd7\x1a\xc6\x7a\x11\x7b\x4a\x80\x30\x98\x97\x8c\xa5\x2f\xc8\x61\x8f\x5d\xe3\x89\xb8\x76\x08\x06\x6a\xdd\xfe\x31\x32\x97\x5e\xcf\x09\x10\xb7\xb7\xd1\x58\xe8\x09\x7a\x85\xf5\x2e\x0d\x87\xd3\xf4\xb3\x5e\x1e\x81\x25\xc5\xdb\xe7\x51\x01\x3e\x37\xd2\x75\xb4\x29\x97\x03\x6e\xcb\xff\x07\x4c\xa5\xe6\x96\x95\xf4\x0e\x04\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\xdd\x26\x14\x9b\x7d\x08\x00\x00")

func assetsRedPngBytes() ([]byte, error) {
	return bindataRead(
		_assetsRedPng,
		"assets/red.png",
	)
}

func assetsRedPng() (*asset, error) {
	bytes, err := assetsRedPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/red.png", size: 2173, mode: os.FileMode(420), modTime: time.Unix(1560343606, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsYellowPng = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x00\xf9\x07\x06\xf8\x89\x50\x4e\x47\x0d\x0a\x1a\x0a\x00\x00\x00\x0d\x49\x48\x44\x52\x00\x00\x00\x40\x00\x00\x00\x40\x08\x06\x00\x00\x00\xaa\x69\x71\xde\x00\x00\x01\x61\x69\x43\x43\x50\x6b\x43\x47\x43\x6f\x6c\x6f\x72\x53\x70\x61\x63\x65\x44\x69\x73\x70\x6c\x61\x79\x50\x33\x00\x00\x28\x91\x63\x60\x60\x52\x49\x2c\x28\xc8\x61\x61\x60\x60\xc8\xcd\x2b\x29\x0a\x72\x77\x52\x88\x88\x8c\x52\x60\x7f\xc8\xc0\x0e\x84\xbc\x0c\x62\x0c\x0a\x89\xc9\xc5\x05\x8e\x01\x01\x3e\x40\x25\x0c\x30\x1a\x15\x7c\xbb\xc6\xc0\x08\xa2\x2f\xeb\x82\xcc\x3a\x25\x35\xb5\x49\xb5\x5e\xc0\xd7\x62\xa6\xf0\xd5\x8b\xaf\x44\x9b\x30\xd5\xa3\x00\xae\x94\xd4\xe2\x64\x20\xfd\x07\x88\x53\x93\x0b\x8a\x4a\x18\x18\x18\x53\x80\x6c\xe5\xf2\x92\x02\x10\xbb\x03\xc8\x16\x29\x02\x3a\x0a\xc8\x9e\x03\x62\xa7\x43\xd8\x1b\x40\xec\x24\x08\xfb\x08\x58\x4d\x48\x90\x33\x90\x7d\x03\xc8\x56\x48\xce\x48\x04\x9a\xc1\xf8\x03\xc8\xd6\x49\x42\x12\x4f\x47\x62\x43\xed\x05\x01\x6e\x97\xcc\xe2\x82\x9c\xc4\x4a\x85\x00\x63\x02\xae\x25\x03\x94\xa4\x56\x94\x80\x68\xe7\xfc\x82\xca\xa2\xcc\xf4\x8c\x12\x05\x47\x60\x28\xa5\x2a\x78\xe6\x25\xeb\xe9\x28\x18\x19\x18\x9a\x33\x30\x80\xc2\x1c\xa2\xfa\x73\x20\x38\x2c\x19\xc5\xce\x20\xc4\x9a\xef\x33\x30\xd8\xee\xff\xff\xff\xff\x6e\x84\x98\xd7\x7e\x06\x86\x8d\x40\x9d\x5c\x3b\x11\x62\x1a\x16\x0c\x0c\x82\xdc\x0c\x0c\x27\x76\x16\x24\x16\x25\x82\x85\x98\x81\x98\x29\x2d\x8d\x81\xe1\xd3\x72\x06\x06\xde\x48\x06\x06\xe1\x0b\x40\x3d\xd1\xc5\x69\xc6\x46\x60\x79\x46\x1e\x27\x06\x06\xd6\x7b\xff\xff\x7f\x56\x63\x60\x60\x9f\xcc\xc0\xf0\x77\xc2\xff\xff\xbf\x17\xfd\xff\xff\x77\x31\x50\xf3\x1d\x06\x86\x03\x79\x00\x15\x21\x65\xee\x35\xc7\xd1\xfb\x00\x00\x06\x53\x49\x44\x41\x54\x78\x01\xed\x5b\x6b\x6c\x15\x45\x14\x3e\xdf\xde\x3e\x08\x94\x77\x8a\x8a\xa2\x11\x5a\xae\x5a\xe8\x2d\x46\x44\xc1\x48\x94\x18\xdf\x22\x11\x12\xc5\x68\x22\x84\x9f\x3e\x22\x89\x04\x7c\xff\x31\x11\x41\xc0\xa8\x18\x63\x34\x46\x89\x46\xfc\x41\x48\x8c\x18\x41\x14\x8d\x68\x62\xa1\xb7\xa4\x20\xf4\x12\x23\x51\x79\x94\x68\x82\x82\x60\xb9\x7b\x3c\xbb\x6d\xe9\xbd\xbd\xbd\xbb\x67\x77\x67\xb7\xfc\xe8\xfc\xb9\x33\x73\xce\x9c\xc7\x37\x33\x3b\x73\x66\xe6\x82\x12\x48\xcc\x0c\x6a\xad\x9f\x41\xcc\x77\x12\x61\x0a\x31\x4d\x16\xb5\xb5\x04\x1e\x2e\x79\x5b\xea\x0e\x4b\xfe\x30\xb1\xf3\x4b\x87\x84\xf6\x25\x55\x56\x6f\x47\x43\xdb\x7f\x71\x9b\x87\x38\x15\x70\x76\xf2\x1c\xb2\xed\xfb\x44\xc7\x5c\x22\x1e\x1f\x48\x17\xf0\xb7\x80\xb3\x85\x52\xd8\x44\x53\x47\x6c\x04\x9a\x3b\x03\xb5\x57\x32\xc7\x02\x00\xef\x99\x34\x93\xf2\x58\x2d\x3d\x7e\x9d\xd2\x0e\x1f\x36\xe4\x64\x84\x3c\x43\x99\xdc\x27\x00\xd8\x87\x39\x10\xd9\x28\x00\xdc\x3a\x79\x22\xe5\xed\x97\xa5\xb7\xe7\x07\xb2\x42\xcb\x0c\x6a\x26\x0b\x4b\xd1\x98\xfb\x46\xdb\xc4\x8f\xcf\x18\x00\xe2\xfc\x1d\x32\xdc\x3f\x96\x5e\x1f\xee\xa7\x34\x12\x1d\xf2\xcd\x00\x2d\x43\xe6\xe0\xaa\x48\x72\xba\x1b\x1b\x01\x80\x5b\x26\x3d\x2a\xf3\x75\x8d\xc8\x4c\x99\x30\x4a\x25\x03\xf8\x90\x46\x5e\xb2\x04\x97\x7f\x7d\x5a\xc5\x5f\x86\x29\x32\x00\xe2\xfc\x3a\x71\xfe\xb1\x32\xf2\xe3\xad\x06\x7e\x24\x0c\x9d\x83\x4c\xeb\xc9\xb0\x8a\xac\xb0\x0d\x9d\x76\xe2\xfc\xd2\x01\x73\xde\x35\x80\x67\x90\x7d\x6a\x83\xbb\xcc\x86\x74\x24\x34\x00\xee\x12\xc7\x24\x1f\xbc\x00\x09\xb4\x5f\xe6\xef\x4a\x02\x6e\xa5\x2a\x34\x10\x0d\x1f\x4d\x55\x43\xc6\x4a\xdd\x5b\x01\xa4\xf4\x61\xe5\xb9\x94\xad\x7f\xa9\x4f\xa5\xba\x18\x6a\x0a\xf0\xde\x2b\x2f\xa3\x33\x9d\xcd\x32\x06\xc6\x2a\x35\x6d\xa5\x8a\x8a\xe5\x98\xba\xff\xa7\xfe\xf8\x99\x17\xa4\x28\xbb\xab\x43\x46\xd3\xe8\xfe\xe8\xaa\x3a\xcb\x5a\x88\x4c\xfb\x47\x2a\xde\x02\xa6\x70\x23\xe0\x4c\xe7\x6b\x2a\xe7\x41\xc7\xc8\xa2\xdb\x31\xed\xe0\x2d\xe5\x9c\x2f\xb0\x25\x5a\x96\xed\xb5\xdc\xd6\x50\x13\x54\x48\x60\x00\x38\x5b\x27\x9b\x1b\xbe\xc7\x57\x11\xd0\x42\x95\x43\xa6\xcb\x72\xb5\xc5\x8b\x57\x8c\x1e\x23\xbd\xff\x7a\xa4\xde\x77\x14\x30\x8d\xa3\xce\xd3\x4f\x79\xe9\xea\x8f\x16\x78\x0a\x70\x4b\xdd\x57\xb2\xd6\xdf\xd4\x9f\xb0\xde\x3a\x64\xa9\xaa\xfa\x06\xd9\xcb\xff\xd3\x5b\x27\x36\x3a\x31\xc1\x9e\xf4\x6d\xc4\xf6\x3c\x59\xcd\x67\xc9\xee\x6e\xbc\x18\x3e\xaa\x90\x27\x52\x1e\x38\x49\x55\x95\xf5\xb8\x6a\xdf\x61\xad\x9c\x40\x00\x70\x36\x7d\x33\xd9\x67\xb7\x79\x0a\x77\x86\xbd\xd3\xf3\x0d\x6d\x87\x0a\xf9\xb8\xb5\x6e\xb6\x38\xbd\x56\x50\x68\x2a\xac\x8f\x21\xbf\x4e\xa6\xdc\x13\x5a\xb9\xc1\xa6\x80\x9d\x7f\xc0\x57\x30\x5b\x8b\x4a\x9c\x6f\xa9\x7b\x92\xf2\xbc\x2d\x01\xe7\x25\xb0\xc4\xfc\x20\xcb\xa2\x1a\x00\x57\x28\xf8\x2e\x4f\x00\x80\xed\x98\xd6\xfe\x59\x21\x0f\x67\xeb\x1f\x17\xc7\x57\x4b\x5d\x32\xbb\x44\xe6\x8b\x29\x9b\x9e\x5e\x68\x83\x57\x5e\x0d\x80\x2b\x94\xe9\x42\x2f\x61\xb2\x9e\xaf\x28\xa4\xf3\xee\xf4\x2c\x89\x0f\x1c\xe7\x93\x4d\x6c\xdf\xab\x55\xa8\x07\x80\x6c\x39\xcc\xf0\x48\xc0\x2f\xc8\xe4\x7e\x28\xe2\x40\xfe\x55\x29\x27\xd3\xf3\x45\x8a\x9d\x83\x17\x5d\x0a\x00\x00\xa5\x7d\x44\x6e\x2a\xa4\x73\x6b\xfd\x8d\x32\xf4\xaf\x2d\xac\x4b\x2c\x0f\x4c\xd4\xea\xd2\x03\xc0\x74\x91\xa7\x50\xe6\x1d\x45\x74\xe6\x79\x45\xe5\x24\x0b\xcc\x35\xfc\x73\x5a\x15\x96\xeb\x01\x20\xf6\x06\xa0\x32\xf5\x7b\x91\x8f\xcc\xd7\x14\x95\x93\x2e\x9c\x21\xd5\x11\x9c\x1e\x00\xc0\x1b\x80\xb3\xf4\x47\xb1\x8f\x50\x19\x50\xdc\xc6\x60\x89\xcf\xaa\xf4\xeb\x01\x90\x15\xd6\xdb\x3c\x7b\x54\x0f\x9d\xb3\x8d\xc3\x64\x87\x77\x69\x4f\x79\x40\x7e\x51\xe1\x63\x6f\x97\x55\x7a\x00\x98\x8e\x78\x3a\xc2\xf4\x86\x73\x26\xc8\x7b\xa6\x5c\x40\x7c\xf2\x1d\xd9\xf8\x56\x78\xf2\xc7\x4d\xe4\xfc\x51\x8d\x0a\xbd\x91\xe0\x23\xd2\xab\x93\xca\x0b\xe5\xd9\x94\xcf\x1f\x24\xfa\xb7\x3c\x4b\x92\x94\xea\x0a\xef\x0e\xeb\xb6\x45\x3f\x02\x08\x2a\x81\x49\xfa\x58\x5e\x17\x3a\xe9\x8a\x7d\x7f\x96\xa7\xf7\x52\xf4\x00\x48\x1c\xd7\xdb\xec\x3c\xcf\x89\xad\xda\xfb\x03\x3d\x00\x6c\x7d\x7e\x9e\xbb\xdd\x6b\x9e\x73\xa3\xa4\x4c\x7a\x00\x32\x0b\xe5\x38\x0b\xc7\x95\x72\x07\x96\x0d\xfa\xce\x52\x03\x00\xbc\xe0\x5c\x48\xa8\x91\x1d\x30\x04\x40\x7f\x51\x26\xb3\x53\xab\x5f\x0d\x80\x2b\xd0\xa2\x37\xb5\x82\x07\x8e\x0f\x6f\x03\x1b\xf3\x5a\xfd\x81\x00\x90\x3b\x39\x07\xd9\xad\x5a\xe1\x89\xf3\x39\x47\x62\xc3\x28\x50\xf8\x1d\x08\x00\xd7\x21\xa4\x5e\x4c\xdc\x31\xad\x42\xc6\x7a\xd4\xe7\x3a\xb4\xec\x0e\x5f\x60\x00\xd0\x74\xe0\x3b\xf9\x18\x6e\x0e\xa2\x24\x19\x5e\x74\x50\x0d\xaf\x0c\xaa\x2b\x30\x00\xae\x82\xa1\xd6\x62\x39\x7b\x2b\x8e\xfe\x82\x6a\x36\xc9\x0f\xd9\xa3\x5a\xfc\x70\xd0\xde\x77\x4c\x08\x05\x00\xd2\x07\x8e\x4b\xcb\x07\xa5\xbd\xfa\x63\x63\xd2\xdf\x12\x59\xa0\x55\x7e\xf7\x0f\x25\x6d\xba\x2b\x42\x01\xe0\xb4\xed\x7e\xa4\xf0\x7c\x39\xc1\xc9\xd5\xe3\x7b\x6a\x1c\xf5\x74\x58\x7d\xaa\x90\xd1\x4b\x38\xef\xae\xdb\x28\x91\x5f\x3c\x2f\x42\xbc\x14\x3b\x34\x67\x1a\x62\xe8\xd5\x72\x3d\x7e\xcc\x8f\xb5\x1c\x3d\xf4\x08\x38\x27\xb0\x86\x16\x8b\x25\x12\x05\x26\x9c\x9c\x97\x22\x64\xdd\x1f\xc5\x79\xc7\xe2\xc8\x00\xc8\x87\xe7\x84\xbc\xe4\x5a\x24\xbb\x44\xa3\x8f\x97\xfc\xe1\xc4\x9a\xae\x15\xc9\x9f\xd3\x8b\x23\x32\x00\x8e\x70\x34\xb6\xef\x90\x37\x7e\xeb\xbd\x14\x19\xa6\xb5\xd3\xd8\xda\x67\x4d\xc8\x34\x02\x80\x6b\x48\x55\xf5\x32\x99\x93\xbf\x99\x30\xca\x57\x46\x0a\x4b\x30\x61\xa7\x91\x93\x17\x63\x00\x74\xdf\x04\x27\xb0\x2a\x60\xb3\xc9\x67\x72\xc6\x00\x70\x7b\x2d\x33\xed\x7d\x99\x10\x7b\x7d\x7b\x30\x3c\x43\x9e\xaa\x68\x79\xf8\xe6\xa5\x2d\x8d\x02\xd0\x15\x85\x71\xe8\x35\xb9\xd4\xbc\x3e\x35\xa0\x0f\xd0\x90\x33\x0a\xb0\x51\x00\x5c\x73\x9b\x1e\x72\xe2\x84\x5f\xfb\x98\x6e\xa8\x08\x79\x9a\x63\x36\x19\x07\xa0\xeb\xe0\x04\xef\x9a\x35\x53\xa4\x01\xbb\xd0\x94\xdb\x6d\x5a\xae\x71\x00\x5c\x03\x53\xfc\x9e\xec\x0b\x64\xa3\x62\x30\x81\xe4\xae\x61\x30\x0d\x22\x30\x88\xc0\x20\x02\x66\x11\x88\x1c\x0e\x97\x33\x47\x1e\x52\x1f\x95\xf0\x68\x5c\x39\x7a\xe0\x7a\x0b\xd7\x97\x3c\xc1\x09\x2c\xa4\xb4\x41\x3c\xab\x40\xa9\x9e\xf3\xb6\x66\x10\x80\x18\xbb\x26\xe1\xf3\x81\x70\x9e\xc4\x39\x02\xcc\x02\xc0\x96\xd9\x8d\x55\x37\x5e\x31\x02\x80\x3e\x6f\x86\xc2\xf5\xd0\xb9\x56\xb0\xcd\xca\x8b\x1d\x00\xd0\xa7\xe7\x8c\x8f\x9a\x91\xff\x06\xc9\x0a\x10\xcb\x61\x4b\x7c\x23\xa0\x76\xe4\x3a\x23\x87\xa5\x5d\x7f\x93\x53\xbf\xfe\x0e\x8a\x75\x6c\x00\x60\x7c\xf3\x29\xb2\xac\x47\x22\x07\x45\xa0\xd5\x71\xac\xff\x3d\x40\xc5\x06\x80\xa3\x00\x99\x03\xdf\x4a\x18\x1b\x21\x86\xc7\x3e\x1a\x31\xe1\xb9\x1e\x63\xe3\xf8\x8d\x15\x00\xd7\xe0\x31\xb5\x2b\x04\x84\x2f\x82\x1b\x2f\x1f\x51\xd0\x82\xa8\x7f\x8c\xf4\xd3\x1b\x3b\x00\xee\xe9\x6d\x66\xe4\xdd\x72\x03\xf1\x8a\x00\x21\x37\x39\x7e\xf7\x07\x38\x21\x63\x67\x33\x55\x57\xce\x94\x03\x90\x36\x3f\x07\xa2\xd2\xff\x07\x96\xa2\xa4\x04\x1b\x45\xab\x51\x00\x00\x00\x00\x49\x45\x4e\x44\xae\x42\x60\x82\x01\x00\x00\xff\xff\x11\xfa\xa2\x08\xf9\x07\x00\x00")

func assetsYellowPngBytes() ([]byte, error) {
	return bindataRead(
		_assetsYellowPng,
		"assets/yellow.png",
	)
}

func assetsYellowPng() (*asset, error) {
	bytes, err := assetsYellowPngBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/yellow.png", size: 2041, mode: os.FileMode(420), modTime: time.Unix(1560343608, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/grey.png": assetsGreyPng,
	"assets/red.png": assetsRedPng,
	"assets/yellow.png": assetsYellowPng,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"grey.png": &bintree{assetsGreyPng, map[string]*bintree{}},
		"red.png": &bintree{assetsRedPng, map[string]*bintree{}},
		"yellow.png": &bintree{assetsYellowPng, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

